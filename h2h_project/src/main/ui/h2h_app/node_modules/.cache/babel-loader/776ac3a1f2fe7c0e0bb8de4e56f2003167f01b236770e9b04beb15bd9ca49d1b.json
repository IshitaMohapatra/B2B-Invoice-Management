{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\Programs\\\\HRC masterclass\\\\Java-React Project\\\\h2h_project\\\\src\\\\main\\\\ui\\\\h2h_app\\\\src\\\\components\\\\PredictButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { deepOrange } from '@material-ui/core/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColorButton = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n    '&:hover': {\n      backgroundColor: deepOrange[700]\n    }\n  }\n}))(Button);\n_c = ColorButton;\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\nexport default function PredictButton() {\n  _s();\n  const classes = useStyles();\n  const [prediction, setPrediction] = useState(null);\n  const handlePredict = () => {\n    fetch('http://127.0.0.1:5000/predict', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({})\n    }).then(response => response.json()).then(data => {\n      setPrediction(data);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.buttonContainer,\n    children: [/*#__PURE__*/_jsxDEV(ColorButton, {\n      variant: \"contained\",\n      className: classes.margin,\n      onClick: handlePredict,\n      children: \"PREDICT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Received prediction: \", prediction]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(PredictButton, \"gDP0JNEtdEQSyN5t3fuxuCLfowM=\", false, function () {\n  return [useStyles];\n});\n_c2 = PredictButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"ColorButton\");\n$RefreshReg$(_c2, \"PredictButton\");","map":{"version":3,"names":["React","useState","withStyles","makeStyles","Button","deepOrange","jsxDEV","_jsxDEV","ColorButton","theme","root","color","palette","getContrastText","backgroundColor","_c","useStyles","margin","spacing","PredictButton","_s","classes","prediction","setPrediction","handlePredict","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","error","console","className","buttonContainer","children","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/Programs/HRC masterclass/Java-React Project/h2h_project/src/main/ui/h2h_app/src/components/PredictButton.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\n\r\nconst ColorButton = withStyles((theme) => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n    '&:hover': {\r\n      backgroundColor: deepOrange[700],\r\n    },\r\n  },\r\n}))(Button);\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function PredictButton() {\r\n  const classes = useStyles();\r\n  const [prediction, setPrediction] = useState(null);\r\n\r\n  const handlePredict = () => {\r\n    fetch('http://127.0.0.1:5000/predict', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({}),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setPrediction(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.buttonContainer}>\r\n      <ColorButton variant=\"contained\" className={classes.margin} onClick={handlePredict}>\r\n        PREDICT\r\n      </ColorButton>\r\n      {prediction && (\r\n        <p>Received prediction: {prediction}</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,EAAEC,UAAU,QAAQ,0BAA0B;AACjE,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,SAASC,UAAU,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,WAAW,GAAGN,UAAU,CAAEO,KAAK,KAAM;EACzCC,IAAI,EAAE;IACJC,KAAK,EAAEF,KAAK,CAACG,OAAO,CAACC,eAAe,CAACR,UAAU,CAAC,GAAG,CAAC,CAAC;IACrDS,eAAe,EAAET,UAAU,CAAC,GAAG,CAAC;IAChC,SAAS,EAAE;MACTS,eAAe,EAAET,UAAU,CAAC,GAAG;IACjC;EACF;AACF,CAAC,CAAC,CAAC,CAACD,MAAM,CAAC;AAACW,EAAA,GARNP,WAAW;AASjB,MAAMQ,SAAS,GAAGb,UAAU,CAAEM,KAAK,KAAM;EACvCQ,MAAM,EAAE;IACNA,MAAM,EAAER,KAAK,CAACS,OAAO,CAAC,CAAC;EACzB;AACF,CAAC,CAAC,CAAC;AAEH,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAMC,OAAO,GAAGL,SAAS,CAAC,CAAC;EAC3B,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMuB,aAAa,GAAGA,CAAA,KAAM;IAC1BC,KAAK,CAAC,+BAA+B,EAAE;MACrCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC;IACzB,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdX,aAAa,CAACW,IAAI,CAAC;IACrB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACN,CAAC;EAED,oBACE7B,OAAA;IAAK+B,SAAS,EAAEjB,OAAO,CAACkB,eAAgB;IAAAC,QAAA,gBACtCjC,OAAA,CAACC,WAAW;MAACiC,OAAO,EAAC,WAAW;MAACH,SAAS,EAAEjB,OAAO,CAACJ,MAAO;MAACyB,OAAO,EAAElB,aAAc;MAAAgB,QAAA,EAAC;IAEpF;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,EACbxB,UAAU,iBACTf,OAAA;MAAAiC,QAAA,GAAG,uBAAqB,EAAClB,UAAU;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CACxC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC1B,EAAA,CA/BuBD,aAAa;EAAA,QACnBH,SAAS;AAAA;AAAA+B,GAAA,GADH5B,aAAa;AAAA,IAAAJ,EAAA,EAAAgC,GAAA;AAAAC,YAAA,CAAAjC,EAAA;AAAAiC,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}