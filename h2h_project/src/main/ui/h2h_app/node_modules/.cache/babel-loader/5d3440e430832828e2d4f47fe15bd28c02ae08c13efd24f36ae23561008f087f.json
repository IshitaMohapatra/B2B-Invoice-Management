{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\Programs\\\\HRC masterclass\\\\Java-React Project\\\\h2h_project\\\\src\\\\main\\\\ui\\\\h2h_app\\\\src\\\\components\\\\EditPopup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPopup = _ref => {\n  _s();\n  let {\n    invoice,\n    onSave,\n    onCancel\n  } = _ref;\n  const [editedInvoice, setEditedInvoice] = useState(invoice);\n  const [selectedInvoice, setSelectedInvoice] = useState(null); //to keep track of selected invoice for editing\n\n  const getEdit = selectedRow => {\n    axios.get(`http://localhost:8080/h2h_project/EditServlet?id=${selectedRow}`).then(res => {\n      // Handle the response from the EditServlet\n      console.log(\"Edit response:\", res.data);\n    }).catch(error => {\n      // Handle the error\n      console.error(\"Edit error:\", error);\n    });\n  };\n  const handleEditInvoice = invoice => {\n    setSelectedInvoice(invoice);\n  };\n  const handleSaveInvoice = editedInvoice => {\n    const updatedInvoice = invoice.map(item => item.id === selectedInvoice ? {\n      ...item,\n      invoice: editedInvoice\n    } : item);\n    setInvoice(updatedInvoice);\n    setSelectedInvoice(null);\n  };\n  const handleCancelEdit = () => {\n    setSelectedInvoice(null);\n  };\n  const handleChange = event => {\n    setEditedInvoice(event.target.value);\n  };\n  const handleSave = () => {\n    onSave(editedInvoice);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editedInvoice,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(EditPopup, \"M7+uvSRifIxB3pWPjwxRPo1a3/U=\");\n_c = EditPopup;\nexport default EditPopup;\nvar _c;\n$RefreshReg$(_c, \"EditPopup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","EditPopup","_ref","_s","invoice","onSave","onCancel","editedInvoice","setEditedInvoice","selectedInvoice","setSelectedInvoice","getEdit","selectedRow","axios","get","then","res","console","log","data","catch","error","handleEditInvoice","handleSaveInvoice","updatedInvoice","map","item","id","setInvoice","handleCancelEdit","handleChange","event","target","value","handleSave","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/Programs/HRC masterclass/Java-React Project/h2h_project/src/main/ui/h2h_app/src/components/EditPopup.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst EditPopup = ({ invoice, onSave, onCancel }) => {\r\n  const [editedInvoice, setEditedInvoice] = useState(invoice);\r\n  const [selectedInvoice, setSelectedInvoice] = useState(null); //to keep track of selected invoice for editing\r\n  \r\n  const getEdit = (selectedRow) => {\r\n    axios.get(`http://localhost:8080/h2h_project/EditServlet?id=${selectedRow}`)\r\n      .then(res => {\r\n        // Handle the response from the EditServlet\r\n        console.log(\"Edit response:\", res.data);\r\n      })\r\n      .catch(error => {\r\n        // Handle the error\r\n        console.error(\"Edit error:\", error);\r\n      });\r\n  };\r\n  const handleEditInvoice = (invoice) => {\r\n    setSelectedInvoice(invoice);\r\n  };\r\n  const handleSaveInvoice = (editedInvoice) => {\r\n    const updatedInvoice = invoice.map(item =>\r\n      item.id === selectedInvoice ? { ...item, invoice: editedInvoice } : item\r\n    );\r\n    setInvoice(updatedInvoice);\r\n    setSelectedInvoice(null);\r\n  };\r\n  const handleCancelEdit = () => {\r\n    setSelectedInvoice(null);\r\n  };\r\n  const handleChange = (event) => {\r\n    setEditedInvoice(event.target.value);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    onSave(editedInvoice);\r\n  };\r\n\r\n  return (\r\n    <div className=\"popup\">\r\n      <div className=\"popup-content\">\r\n        <h2>Edit</h2>\r\n        <input type=\"text\" value={editedInvoice} onChange={handleChange} />\r\n        <div className=\"button-container\">\r\n          <button onClick={handleSave}>Edit</button>\r\n          <button onClick={onCancel}>Cancel</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPopup;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}