{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\Programs\\\\HRC masterclass\\\\Java-React Project\\\\h2h_project\\\\src\\\\main\\\\ui\\\\h2h_app\\\\src\\\\components\\\\AnalyticViewTab.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    color: \"white\",\n    border: \"1px solid white\"\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  container: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr 1fr\",\n    gap: theme.spacing(2),\n    padding: theme.spacing(2),\n    margin: theme.spacing(1)\n  },\n  formContainer: {\n    border: \"1px solid white\",\n    padding: theme.spacing(2),\n    margin: theme.spacing(1),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  graphContainer: {\n    gridColumn: \"2\"\n  },\n  chartContainer: {\n    gridColumn: \"3\"\n  }\n}));\nconst AnalyticalViewTab = () => {\n  _s();\n  const [invoice, setInvoice] = useState([]);\n  const [distributionChannels, setDistributionChannels] = useState([]);\n  const fetchDistributionChannels = customerNumber => {\n    axios.get(`http://localhost:8080/h2h_project/DistributionChannelsServlet?customerNumber=${customerNumber}`).then(res => {\n      const fetchedDistributionChannels = res.data;\n      setDistributionChannels(fetchedDistributionChannels);\n    }).catch(error => {\n      console.error(\"Failed to fetch distribution channels:\", error);\n    });\n  };\n  const classes = useStyles();\n  const handleViewClick = () => {\n    const distributionChannel = document.getElementById(\"distribution-channel\").value;\n    const customerNumber = document.getElementById(\"customer-number\").value;\n    if (customerNumber) {\n      fetchDistributionChannels(customerNumber);\n    } else {\n      console.log(\"Please enter a customer number.\");\n    }\n  };\n  const pieChartOptions = {\n    chart: {\n      type: \"pie\",\n      backgroundColor: \"#777777\"\n    },\n    title: {\n      text: \"Open and Closed Invoices\",\n      style: {\n        color: \"#ffffff\"\n      }\n    },\n    series: [{\n      name: \"Categories\",\n      colorByPoint: true,\n      data: [{\n        name: \"Open\",\n        y: 100\n      }, {\n        name: \"Closed\",\n        y: 0\n      }]\n    }]\n  };\n  const graphChartOptions = {\n    chart: {\n      type: \"column\",\n      backgroundColor: \"#777777\"\n    },\n    title: {\n      text: \"Total Amount per Distribution Channel\",\n      style: {\n        color: \"#ffffff\"\n      }\n    },\n    xAxis: {\n      categories: distributionChannels.map(channel => channel.name)\n    },\n    yAxis: {\n      title: {\n        text: \"Count\"\n      }\n    },\n    series: [{\n      name: \"Count\",\n      data: distributionChannels.map(channel => channel.count)\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.formContainer,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"distribution-channel\",\n          label: \"DISTRIBUTION CHANNEL\",\n          style: {\n            backgroundColor: \"white\",\n            margin: \"10px\",\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"customer-number\",\n          label: \"CUSTOMER NUMBER\",\n          style: {\n            backgroundColor: \"white\",\n            margin: \"10px\",\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          className: `${classes.button} ${classes.margin}`,\n          onClick: handleViewClick,\n          style: {\n            width: \"100%\"\n          },\n          children: \"VIEW\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.graphContainer,\n        children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n          highcharts: Highcharts,\n          options: graphChartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.chartContainer,\n        children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n          highcharts: Highcharts,\n          options: pieChartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(AnalyticalViewTab, \"4eqvxT/IOpJg5hInSIXn9v7oPQ0=\", false, function () {\n  return [useStyles];\n});\n_c = AnalyticalViewTab;\nexport default AnalyticalViewTab;\nvar _c;\n$RefreshReg$(_c, \"AnalyticalViewTab\");","map":{"version":3,"names":["React","useState","axios","TextField","Button","makeStyles","Highcharts","HighchartsReact","jsxDEV","_jsxDEV","useStyles","theme","button","color","border","margin","spacing","container","display","gridTemplateColumns","gap","padding","formContainer","flexDirection","alignItems","graphContainer","gridColumn","chartContainer","AnalyticalViewTab","_s","invoice","setInvoice","distributionChannels","setDistributionChannels","fetchDistributionChannels","customerNumber","get","then","res","fetchedDistributionChannels","data","catch","error","console","classes","handleViewClick","distributionChannel","document","getElementById","value","log","pieChartOptions","chart","type","backgroundColor","title","text","style","series","name","colorByPoint","y","graphChartOptions","xAxis","categories","map","channel","yAxis","count","children","className","id","label","width","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","highcharts","options","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/Programs/HRC masterclass/Java-React Project/h2h_project/src/main/ui/h2h_app/src/components/AnalyticViewTab.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    color: \"white\",\r\n    border: \"1px solid white\",\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"1fr 1fr 1fr\",\r\n    gap: theme.spacing(2),\r\n    padding: theme.spacing(2),\r\n    margin: theme.spacing(1),\r\n  },\r\n  formContainer: {\r\n    border: \"1px solid white\",\r\n    padding: theme.spacing(2),\r\n    margin: theme.spacing(1),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  graphContainer: {\r\n    gridColumn: \"2\"\r\n  },\r\n  chartContainer: {\r\n    gridColumn: \"3\",\r\n  },\r\n}));\r\n\r\nconst AnalyticalViewTab = () => {\r\n  const [invoice, setInvoice] = useState([]);\r\n  const [distributionChannels, setDistributionChannels] = useState([]);\r\n\r\n  const fetchDistributionChannels = (customerNumber) => {\r\n    axios.get(`http://localhost:8080/h2h_project/DistributionChannelsServlet?customerNumber=${customerNumber}`)\r\n      .then(res => {\r\n        const fetchedDistributionChannels = res.data;\r\n        setDistributionChannels(fetchedDistributionChannels);\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Failed to fetch distribution channels:\", error);\r\n      });\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const handleViewClick = () => {\r\n    const distributionChannel = document.getElementById(\"distribution-channel\").value;\r\n    const customerNumber = document.getElementById(\"customer-number\").value;\r\n\r\n    if (customerNumber) {\r\n      fetchDistributionChannels(customerNumber);\r\n    } else {\r\n      console.log(\"Please enter a customer number.\");\r\n    }\r\n  };\r\n\r\n  const pieChartOptions = {\r\n    chart: {\r\n      type: \"pie\",\r\n      backgroundColor: \"#777777\",\r\n    },\r\n    title: {\r\n      text: \"Open and Closed Invoices\",\r\n      style: { color: \"#ffffff\" },\r\n    },\r\n    series: [{\r\n      name: \"Categories\",\r\n      colorByPoint: true,\r\n      data: [{\r\n        name: \"Open\",\r\n        y: 100,\r\n      }, {\r\n        name: \"Closed\",\r\n        y: 0,\r\n      }],\r\n    }],\r\n  };\r\n\r\n  const graphChartOptions = {\r\n    chart: {\r\n      type: \"column\",\r\n      backgroundColor: \"#777777\",\r\n    },\r\n    title: {\r\n      text: \"Total Amount per Distribution Channel\",\r\n      style: { color: \"#ffffff\" },\r\n    },\r\n    xAxis: {\r\n      categories: distributionChannels.map(channel => channel.name),\r\n    },\r\n    yAxis: {\r\n      title: {\r\n        text: \"Count\",\r\n      },\r\n    },\r\n    series: [{\r\n      name: \"Count\",\r\n      data: distributionChannels.map(channel => channel.count),\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.container}>\r\n        <div className={classes.formContainer}>\r\n          <TextField\r\n            id=\"distribution-channel\"\r\n            label=\"DISTRIBUTION CHANNEL\"\r\n            style={{ backgroundColor: \"white\", margin: \"10px\", width: \"100%\" }}\r\n          />\r\n          <TextField\r\n            id=\"customer-number\"\r\n            label=\"CUSTOMER NUMBER\"\r\n            style={{ backgroundColor: \"white\", margin: \"10px\", width: \"100%\" }}\r\n          />\r\n          <Button\r\n            variant=\"outlined\"\r\n            className={`${classes.button} ${classes.margin}`}\r\n            onClick={handleViewClick}\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            VIEW\r\n          </Button>\r\n        </div>\r\n        <div className={classes.graphContainer}>\r\n          <HighchartsReact highcharts={Highcharts} options={graphChartOptions} />\r\n        </div>\r\n        <div className={classes.chartContainer}>\r\n          <HighchartsReact highcharts={Highcharts} options={pieChartOptions} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnalyticalViewTab;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}