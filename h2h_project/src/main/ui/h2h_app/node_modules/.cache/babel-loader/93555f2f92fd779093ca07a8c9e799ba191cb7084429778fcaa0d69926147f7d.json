{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\Programs\\\\HRC masterclass\\\\Java-React Project\\\\h2h_project\\\\src\\\\main\\\\ui\\\\h2h_app\\\\src\\\\components\\\\Grid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { TableContainer, Table, TableHead, TableBody, TableRow, TableCell, TablePagination, Checkbox } from \"@material-ui/core\";\nimport './DataGrid.css';\nimport Button from \"./button\";\nimport EditButton from \"./EditButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = \"http://localhost:8080/h2h_project/DataLoadingServlet\";\nconst rowsPerPageOptions = [5, 10, 20, 50, 100];\nexport default function FetchData() {\n  _s();\n  const [invoice, setInvoice] = useState([]);\n  const [selectAll, setSelectAll] = useState(false);\n  const [selectedRows, setSelectedRows] = useState([]); //to keep track of selected rows\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(rowsPerPageOptions[0]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = () => {\n    axios.get(baseURL).then(res => {\n      const fetchedInvoice = res.data;\n      setInvoice(fetchedInvoice);\n    });\n  };\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const handleCheckboxChange = (event, id) => {\n    const updatedInvoice = invoice.map(item => item.id === id ? {\n      ...item,\n      checked: event.target.checked\n    } : item);\n    setInvoice(updatedInvoice);\n  };\n  const handleMasterCheckboxChange = event => {\n    const checked = event.target.checked;\n    const updatedInvoice = invoice.map(item => ({\n      ...item,\n      checked\n    }));\n    setInvoice(updatedInvoice);\n    setSelectAll(checked);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DataGrid\",\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: selectAll,\n                onChange: handleMasterCheckboxChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Invoice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: invoice.map(Invoice => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: Invoice.checked || false,\n                onChange: event => handleCheckboxChange(event, Invoice.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: Invoice.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: Invoice.invoice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)]\n          }, Invoice.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      component: \"div\",\n      count: invoice.length,\n      page: page,\n      rowsPerPage: rowsPerPage,\n      rowsPerPageOptions: rowsPerPageOptions,\n      onChangePage: handleChangePage,\n      onChangeRowsPerPage: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: fetchData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(FetchData, \"SbXxhUtPyhBbNpATAe6uOMRRx8k=\");\n_c = FetchData;\nvar _c;\n$RefreshReg$(_c, \"FetchData\");","map":{"version":3,"names":["React","useEffect","useState","axios","TableContainer","Table","TableHead","TableBody","TableRow","TableCell","TablePagination","Checkbox","Button","EditButton","jsxDEV","_jsxDEV","baseURL","rowsPerPageOptions","FetchData","_s","invoice","setInvoice","selectAll","setSelectAll","selectedRows","setSelectedRows","page","setPage","rowsPerPage","setRowsPerPage","fetchData","get","then","res","fetchedInvoice","data","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","handleCheckboxChange","id","updatedInvoice","map","item","checked","handleMasterCheckboxChange","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","Invoice","component","count","length","onChangePage","onChangeRowsPerPage","onClick","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/Programs/HRC masterclass/Java-React Project/h2h_project/src/main/ui/h2h_app/src/components/Grid.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  Checkbox\r\n} from \"@material-ui/core\";\r\nimport './DataGrid.css';\r\nimport Button from \"./button\";\r\nimport EditButton from \"./EditButton\";\r\n\r\nconst baseURL = \"http://localhost:8080/h2h_project/DataLoadingServlet\";\r\nconst rowsPerPageOptions = [5, 10, 20, 50, 100];\r\n\r\nexport default function FetchData() {\r\n  const [invoice, setInvoice] = useState([]);\r\n  const [selectAll, setSelectAll] = useState(false);\r\n  const [selectedRows, setSelectedRows] = useState([]); //to keep track of selected rows\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(rowsPerPageOptions[0]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = () => {\r\n    axios.get(baseURL)\r\n      .then(res => {\r\n        const fetchedInvoice = res.data;\r\n        setInvoice(fetchedInvoice);\r\n      })\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleCheckboxChange = (event, id) => {\r\n    const updatedInvoice = invoice.map(item =>\r\n      item.id === id ? { ...item, checked: event.target.checked } : item\r\n    );\r\n    setInvoice(updatedInvoice);\r\n  };\r\n\r\n  const handleMasterCheckboxChange = (event) => {\r\n    const checked = event.target.checked;\r\n    const updatedInvoice = invoice.map(item => ({\r\n      ...item,\r\n      checked\r\n    }));\r\n    setInvoice(updatedInvoice);\r\n    setSelectAll(checked);\r\n  };\r\n\r\n  return (\r\n    <div className=\"DataGrid\">\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <Checkbox\r\n                  checked={selectAll}\r\n                  onChange={handleMasterCheckboxChange}\r\n                />\r\n              </TableCell>\r\n              <TableCell>ID</TableCell>\r\n              <TableCell>Invoice</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {invoice.map(Invoice => (\r\n              <TableRow key={Invoice.id}>\r\n                <TableCell>\r\n                  <Checkbox\r\n                    checked={Invoice.checked || false}\r\n                    onChange={event => handleCheckboxChange(event, Invoice.id)}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>{Invoice.id}</TableCell>\r\n                <TableCell>{Invoice.invoice}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={invoice.length}\r\n        page={page}\r\n        rowsPerPage={rowsPerPage}\r\n        rowsPerPageOptions={rowsPerPageOptions}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n      <Button onClick={fetchData} />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}